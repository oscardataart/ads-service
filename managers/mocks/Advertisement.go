// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	managers "app/managers"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Advertisement is an autogenerated mock type for the Advertisement type
type Advertisement struct {
	mock.Mock
}

// GetUserAdvertisement provides a mock function with given fields: _a0, user
func (_m *Advertisement) GetUserAdvertisement(_a0 context.Context, user managers.User) (managers.Advertise, error) {
	ret := _m.Called(_a0, user)

	var r0 managers.Advertise
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, managers.User) (managers.Advertise, error)); ok {
		return rf(_a0, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, managers.User) managers.Advertise); ok {
		r0 = rf(_a0, user)
	} else {
		r0 = ret.Get(0).(managers.Advertise)
	}

	if rf, ok := ret.Get(1).(func(context.Context, managers.User) error); ok {
		r1 = rf(_a0, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAdvertisement creates a new instance of Advertisement. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAdvertisement(t interface {
	mock.TestingT
	Cleanup(func())
}) *Advertisement {
	mock := &Advertisement{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
